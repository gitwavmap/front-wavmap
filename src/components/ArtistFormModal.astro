---
import ArtistForm from './ArtistForm.astro';
import AuthModalForm from './AuthModalForm.astro';
import NewsletterModal from './NewsletterModal.astro';
import * as m from '../paraglide/messages.js';

// Get authentication state from Layout props
const { user, isAuthenticated } = Astro.props;
---

<!-- Newsletter Modal (global) -->
<NewsletterModal />

<!-- Dropdown Content -->
<div class="dropdown-content">
  <!-- Newsletter Button -->
  <button id="open-newsletter-btn" class="newsletter-cta-btn">
    Join the Newsletter
  </button>

  <h2 class="modal-title">Join the map</h2>

  <!-- Form Content -->
      <!-- Auth Form (shown when not logged in) -->
      <div id="auth-section" class={isAuthenticated ? "hidden" : ""}>
        <div class="auth-intro">
        </div>
        <AuthModalForm />
      </div>

  <!-- Artist Form (shown when logged in AND no submission) -->
  <div id="artist-section" class={isAuthenticated ? "" : "hidden"}>
    <ArtistForm />
  </div>
</div>


<style>
  .dropdown-content {
    padding: 20px;
    padding-bottom: 80px; /* Extra bottom padding for mobile scrolling */
    background: transparent;
    box-sizing: border-box;
  }

  .newsletter-cta-btn {
    display: block;
    width: 100%;
    padding: 1rem;
    margin-bottom: 2rem;
    background: white;
    color: black;
    border: 3px solid black;
    font-size: 1.25rem;
    font-weight: 700;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .newsletter-cta-btn:hover {
    background: black;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .modal-title {
    text-align: center;
    font-size: 2rem;
    font-weight: 900;
    color: white;
    margin: 0 0 20px 0;
    text-transform: none;
    letter-spacing: normal;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .newsletter-cta-btn {
      font-size: 1rem;
      padding: 0.875rem;
      margin-bottom: 1.5rem;
    }

    .modal-title {
      font-size: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .newsletter-cta-btn {
      font-size: 0.9rem;
      padding: 0.75rem;
    }

    .modal-title {
      font-size: 1.25rem;
    }
  }

  .auth-intro {
    text-align: center;
    margin-bottom: 2rem;
    padding: 1rem;
    background: transparent;
    border: none;
  }

  .auth-intro p {
    color: black;
    font-weight: 500;
    font-size: 1rem;
    margin: 0;
    text-transform: none;
    letter-spacing: normal;
  }

  /* Form styling to match the design */
  :global(.artist-form-container) {
    background: transparent !important;
    padding: 0 !important;
    margin: 0 !important;
    box-sizing: border-box !important;
  }

  :global(.artist-form) {
    background: transparent !important;
  }

  :global(.auth-modal-container) {
    background: transparent !important;
  }

  :global(.form-group) {
    margin-bottom: 20px !important;
  }

  :global(.form-group label) {
    display: block;
    margin-bottom: 8px;
    font-weight: 700;
    color: black;
    font-size: 14px;
    text-transform: uppercase;
  }

  :global(.form-group input),
  :global(.form-group select),
  :global(.form-group textarea) {
    width: 100%;
    padding: 10px 12px;
    border: 2px solid black;
    background: transparent;
    font-size: 14px;
    color: white;
    font-weight: 700;
    border-radius: 0;
    transition: all 0.2s ease;
  }

  :global(.form-group input:focus),
  :global(.form-group select:focus),
  :global(.form-group textarea:focus) {
    outline: none;
    background: transparent;
  }

  :global(.form-group input::placeholder),
  :global(.form-group textarea::placeholder) {
    color: rgba(255, 255, 255, 0.7);
    font-weight: 700;
  }

  /* Submit button styling */
  :global(.submit-btn) {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    margin: 15px auto;
    display: block;
    width: auto;
  }

  :global(.submit-btn:hover) {
    opacity: 0.7;
  }

  :global(.submit-btn img) {
    width: auto;
    height: 40px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .dropdown-content {
      padding: 15px 20px;
      padding-bottom: 100px; /* Extra bottom padding for mobile scrolling */
      box-sizing: border-box;
    }

    .modal-title {
      font-size: 1.5rem;
      margin: 0 0 15px 0;
    }

    :global(.form-group input),
    :global(.form-group select),
    :global(.form-group textarea) {
      box-sizing: border-box;
    }
  }
</style>

<script>
  // Check if user has already submitted a form
  async function checkUserSubmission() {
    try {
      // Get Directus URL from environment or use default
      const directusUrl = 'https://directus-production-1f5c.up.railway.app';

      // Get token from cookie
      const token = document.cookie
        .split('; ')
        .find(row => row.startsWith('directus_session_token='))
        ?.split('=')[1];

      if (!token) {
        console.log('⚠️ No authentication token found');
        return false;
      }

      const response = await fetch(`${directusUrl}/check-submission`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (!response.ok) {
        console.log('⚠️ Could not check submission status');
        return false;
      }

      const data = await response.json();
      return data.hasSubmission === true;
    } catch (error) {
      console.error('Error checking submission:', error);
      return false;
    }
  }

  async function handleAuthSuccess() {
    const authSection = document.getElementById('auth-section');
    const artistSection = document.getElementById('artist-section');
    const modalTitle = document.querySelector('.modal-title');

    if (authSection && artistSection) {
      authSection.classList.add('hidden');

      // Check if user has already submitted
      const hasSubmitted = await checkUserSubmission();

      if (hasSubmitted) {
        // User has already submitted - hide the form and update title
        artistSection.classList.add('hidden');
        if (modalTitle) {
          modalTitle.textContent = 'Join the Newsletter';
        }
        console.log('✅ User has already submitted a form - hiding artist form');
      } else {
        // User hasn't submitted yet - show the form
        artistSection.classList.remove('hidden');
      }
    }
  }

  // Check submission status on page load if user is authenticated
  async function checkSubmissionOnLoad() {
    const authSection = document.getElementById('auth-section');
    const artistSection = document.getElementById('artist-section');
    const modalTitle = document.querySelector('.modal-title');

    // Only check if auth section is hidden (user is logged in)
    if (authSection && authSection.classList.contains('hidden')) {
      const hasSubmitted = await checkUserSubmission();

      if (hasSubmitted) {
        artistSection?.classList.add('hidden');
        if (modalTitle) {
          modalTitle.textContent = 'Join the Newsletter';
        }
        console.log('✅ User has already submitted - form hidden on load');
      }
    }
  }

  // Listen for auth success event
  window.addEventListener('authSuccess', handleAuthSuccess);

  // Newsletter button handler
  function initNewsletterButton() {
    const newsletterBtn = document.getElementById('open-newsletter-btn');
    if (newsletterBtn) {
      newsletterBtn.addEventListener('click', () => {
        if (window.openNewsletterModal) {
          window.openNewsletterModal();
        }
      });
    }
  }

  // Initialize on DOM loaded
  document.addEventListener('DOMContentLoaded', () => {
    window.addEventListener('authSuccess', handleAuthSuccess);
    initNewsletterButton();
    checkSubmissionOnLoad();
  });

  // Handle case where script loads after DOM
  if (document.readyState !== 'loading') {
    window.addEventListener('authSuccess', handleAuthSuccess);
    initNewsletterButton();
    checkSubmissionOnLoad();
  }

  // Re-initialize on Astro page transitions
  document.addEventListener('astro:page-load', () => {
    initNewsletterButton();
    checkSubmissionOnLoad();
  });
</script>